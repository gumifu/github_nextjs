{"ast":null,"code":"var _jsxFileName = \"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/typescript_lesson/src/TestComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TestComponent = props => {\n  _s();\n\n  const [count, setCount] = useState(null);\n  const [user, setUser] = useState({\n    id: 1,\n    name: 'dummy'\n  });\n  const [inputData, setInputData] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputData,\n      onChange: handleInput,\n      name: \"\",\n      id: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 12\n  }, this);\n};\n\n_s(TestComponent, \"qIxuOEZip38Te4K4+VjTl75mqfs=\");\n\n_c = TestComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestComponent\");","map":{"version":3,"sources":["/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/typescript_lesson/src/TestComponent.tsx"],"names":["React","useState","TestComponent","props","count","setCount","user","setUser","id","name","inputData","setInputData","text","handleInput"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;AAWA,OAAO,MAAMC,aAA8B,GAAIC,KAAD,IAAW;AAAA;;AACrD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAgB,IAAhB,CAAlC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAW;AAAEO,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAAX,CAAhC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEA,sBAAO;AAAA,4BACH;AAAA,gBAAKE,KAAK,CAACS;AAAX;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAA,gBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,YAFG,eAIH;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEM,SAA1B;AAAqC,MAAA,QAAQ,EAAEG,WAA/C;AAA4D,MAAA,IAAI,EAAC,EAAjE;AAAoE,MAAA,EAAE,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CAXM;;GAAMX,a;;KAAAA,a","sourcesContent":["import React,{useState} from 'react';\n\n\ninterface Props{\n    text: string;\n}\ninterface UserData{\n    id: number;\n    name: string;\n}\n\nexport const TestComponent: React.FC<Props> = (props) => {\n    const [count, setCount] = useState<number | null>(null);\n    const [user, setUser] = useState<UserData>({ id: 1, name: 'dummy' });\n    const [inputData, setInputData] = useState(\"\");\n\n    return <div>\n        <h1>{props.text}</h1>\n        <h2>{count}</h2>\n        {/* <h2>{user}</h2> */}\n        <input type=\"text\" value={inputData} onChange={handleInput} name=\"\" id=\"\" />\n    </div>;\n};\n\n"]},"metadata":{},"sourceType":"module"}