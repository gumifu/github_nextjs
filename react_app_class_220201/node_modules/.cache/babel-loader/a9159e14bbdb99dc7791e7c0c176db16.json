{"ast":null,"code":"var _jsxFileName = \"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/pages/TodoIndex.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoIndex = () => {\n  _s();\n\n  const dummyTodoList = [{\n    id: 1,\n    todo: \"test1\",\n    deadline: \"2022-02-02\",\n    user_id: \"1\",\n    id_done: false,\n    created_at: JSON.stringify(new Date()),\n    updated_at: JSON.stringify(new Date())\n  }, {\n    id: 2,\n    todo: \"test2\",\n    deadline: \"2022-02-22\",\n    user_id: \"2\",\n    id_done: false,\n    created_at: JSON.stringify(new Date()),\n    updated_at: JSON.stringify(new Date())\n  }, {\n    id: 3,\n    todo: \"test3\",\n    deadline: \"2022-02-28\",\n    user_id: \"3\",\n    id_done: false,\n    created_at: JSON.stringify(new Date()),\n    updated_at: JSON.stringify(new Date())\n  }];\n  const [todoList, setTodoList] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: todoList.map((x, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [x.deadline, \" \", x.todo, \" by \", x.user_id, \" at\", x.created_at, \" \", x.updated_at]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoIndex, \"QOdO/4fooWczUj0xeCq3RUQh/2o=\");\n\n_c = TodoIndex;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoIndex\");","map":{"version":3,"sources":["/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/pages/TodoIndex.jsx"],"names":["useState","useEffect","axios","TodoIndex","dummyTodoList","id","todo","deadline","user_id","id_done","created_at","JSON","stringify","Date","updated_at","todoList","setTodoList","map","x","i"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC3B,QAAMC,aAAa,GAAG,CAClB;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,QAAQ,EAAE,YAHd;AAIIC,IAAAA,OAAO,EAAE,GAJb;AAKIC,IAAAA,OAAO,EAAE,KALb;AAMIC,IAAAA,UAAU,EAAEC,IAAI,CAACC,SAAL,CAAe,IAAIC,IAAJ,EAAf,CANhB;AAOIC,IAAAA,UAAU,EAAEH,IAAI,CAACC,SAAL,CAAe,IAAIC,IAAJ,EAAf;AAPhB,GADkB,EAUlB;AACIR,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,QAAQ,EAAE,YAHd;AAIIC,IAAAA,OAAO,EAAE,GAJb;AAKIC,IAAAA,OAAO,EAAE,KALb;AAMIC,IAAAA,UAAU,EAAEC,IAAI,CAACC,SAAL,CAAe,IAAIC,IAAJ,EAAf,CANhB;AAOIC,IAAAA,UAAU,EAAEH,IAAI,CAACC,SAAL,CAAe,IAAIC,IAAJ,EAAf;AAPhB,GAVkB,EAmBlB;AACIR,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,OAFV;AAGIC,IAAAA,QAAQ,EAAE,YAHd;AAIIC,IAAAA,OAAO,EAAE,GAJb;AAKIC,IAAAA,OAAO,EAAE,KALb;AAMIC,IAAAA,UAAU,EAAEC,IAAI,CAACC,SAAL,CAAe,IAAIC,IAAJ,EAAf,CANhB;AAOIC,IAAAA,UAAU,EAAEH,IAAI,CAACC,SAAL,CAAe,IAAIC,IAAJ,EAAf;AAPhB,GAnBkB,CAAtB;AA8BA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;AACA,sBACI;AAAA,cACKe,QAAQ,CAACE,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBACV;AAAA,iBACKD,CAAC,CAACX,QADP,OACkBW,CAAC,CAACZ,IADpB,UAC8BY,CAAC,CAACV,OADhC,SAEKU,CAAC,CAACR,UAFP,OAEoBQ,CAAC,CAACJ,UAFtB;AAAA,OAASK,CAAT;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1CM;;GAAMhB,S;;KAAAA,S","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\n\nexport const TodoIndex = () => {\n    const dummyTodoList = [\n        {\n            id: 1,\n            todo: \"test1\",\n            deadline: \"2022-02-02\",\n            user_id: \"1\",\n            id_done: false,\n            created_at: JSON.stringify(new Date()),\n            updated_at: JSON.stringify(new Date()),\n        },\n        {\n            id: 2,\n            todo: \"test2\",\n            deadline: \"2022-02-22\",\n            user_id: \"2\",\n            id_done: false,\n            created_at: JSON.stringify(new Date()),\n            updated_at: JSON.stringify(new Date()),\n        },\n        {\n            id: 3,\n            todo: \"test3\",\n            deadline: \"2022-02-28\",\n            user_id: \"3\",\n            id_done: false,\n            created_at: JSON.stringify(new Date()),\n            updated_at: JSON.stringify(new Date()),\n        },\n    ];\n\n    const [todoList, setTodoList] = useState(null);\n    return (\n        <ul>\n            {todoList.map((x, i) => (\n                <li key={i}>\n                    {x.deadline} {x.todo} by {x.user_id} at\n                    {x.created_at} {x.updated_at}\n                </li>\n            ))}\n        </ul>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}