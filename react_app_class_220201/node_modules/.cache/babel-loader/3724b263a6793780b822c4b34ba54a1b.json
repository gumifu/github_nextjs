{"ast":null,"code":"var _jsxFileName = \"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/components/Todo.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todo = _ref => {\n  let {\n    id,\n    todo,\n    deadline,\n    is_done,\n    user_id,\n    created_at,\n    updated_at,\n    getData\n  } = _ref;\n\n  const updateTodoData = async params => {\n    const newData = { ...params,\n      ...{\n        is_done: is_done ? false : true\n      }\n    };\n    const requestUrl = \"http://localhost:3001/todo\";\n    const updatedData = await axios.put(`${requestUrl}/${params.id}`, newData);\n    const result = await getData();\n    return updatedData;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: is_done\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [deadline, \" \", todo, \" by \", user_id, \" at \", created_at, \" and \", updated_at]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/components/Todo.jsx"],"names":["Todo","id","todo","deadline","is_done","user_id","created_at","updated_at","getData","updateTodoData","params","newData","requestUrl","updatedData","axios","put","result"],"mappings":";;AAAA,OAAO,MAAMA,IAAI,GAAG,QAWf;AAAA,MAVD;AACIC,IAAAA,EADJ;AAEIC,IAAAA,IAFJ;AAGIC,IAAAA,QAHJ;AAIIC,IAAAA,OAJJ;AAKIC,IAAAA,OALJ;AAMIC,IAAAA,UANJ;AAOIC,IAAAA,UAPJ;AAQIC,IAAAA;AARJ,GAUC;;AACD,QAAMC,cAAc,GAAG,MAAOC,MAAP,IAAkB;AACrC,UAAMC,OAAO,GAAG,EAAE,GAAGD,MAAL;AAAa,SAAG;AAAEN,QAAAA,OAAO,EAAEA,OAAO,GAAG,KAAH,GAAW;AAA7B;AAAhB,KAAhB;AACA,UAAMQ,UAAU,GAAG,4BAAnB;AACA,UAAMC,WAAW,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAW,GAAEH,UAAW,IAAGF,MAAM,CAACT,EAAG,EAArC,EAAwCU,OAAxC,CAA1B;AACA,UAAMK,MAAM,GAAG,MAAMR,OAAO,EAA5B;AACA,WAAOK,WAAP;AACH,GAND;;AAQA,sBACI;AAAa,IAAA,EAAE,EAAEZ,EAAjB;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO,EAAEG;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBACKD,QADL,OACgBD,IADhB,UAC0BG,OAD1B,UACuCC,UADvC,WACwDC,UADxD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,KAASN,EAAT;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA5BM;KAAMD,I","sourcesContent":["export const Todo = (\n    {\n        id,\n        todo,\n        deadline,\n        is_done,\n        user_id,\n        created_at,\n        updated_at,\n        getData,\n    }\n) => {\n    const updateTodoData = async (params) => {\n        const newData = { ...params, ...{ is_done: is_done ? false : true } };\n        const requestUrl = \"http://localhost:3001/todo\";\n        const updatedData = await axios.put(`${requestUrl}/${params.id}`, newData);\n        const result = await getData();\n        return updatedData;\n    };\n\n    return (\n        <li key={id} id={id}>\n            <input type=\"checkbox\" checked={is_done} />\n            <p>\n                {deadline} {todo} by {user_id} at {created_at} and {updated_at}\n            </p>\n        </li>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}