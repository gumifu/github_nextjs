[{"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/index.js":"1","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/reportWebVitals.js":"2","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/App.jsx":"3","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/components/Booklist.jsx":"4","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/components/Navigation.jsx":"5","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/pages/TodoIndex.jsx":"6","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/pages/TodoPost.jsx":"7","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/pages/TodoToday.jsx":"8","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/components/Todo.jsx":"9"},{"size":266,"mtime":1643681333249,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1643679972947,"results":"12","hashOfConfig":"11"},{"size":2007,"mtime":1644286099831,"results":"13","hashOfConfig":"11"},{"size":1260,"mtime":1643694006371,"results":"14","hashOfConfig":"11"},{"size":655,"mtime":1644289708561,"results":"15","hashOfConfig":"11"},{"size":2267,"mtime":1644297494301,"results":"16","hashOfConfig":"11"},{"size":964,"mtime":1644286555586,"results":"17","hashOfConfig":"11"},{"size":1377,"mtime":1644297686673,"results":"18","hashOfConfig":"11"},{"size":1316,"mtime":1644294830044,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"yczwmb",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"23"},"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/index.js",[],[],["52","53"],"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/reportWebVitals.js",[],[],"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/App.jsx",[],[],"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/components/Booklist.jsx",["54"],[],"import { useState, useEffect } from \"react\";\nexport const Booklist = ({ language, hoge, getData }) => {\n    const [bookData, setBookData] = useState(null);\n\n    useEffect(() => {\n        const result = getData?.(language).then((response) => {\n            console.log(response);\n            setBookData(response)\n        });\n    }, [language, getData]);\n\n    console.log(bookData);\n    // const result = getData?.(language);\n    return (\n        <>\n            <ul>\n                {bookData === null ? (\n                    <p>now loading...</p>\n                ) : (\n                        bookData.data.items.map((x, index) => (\n                            <>\n                                <li key={index}><a href={x.volumeInfo.previewLink}>{x.volumeInfo.title}</a></li>\n                                {/* {thumbnail === null ? (\n                                    <p>''</p>\n                                ) : (\n                                )} */}\n                                <img key={index} src={x.volumeInfo.imageLinks.thumbnail} alt=\"\" />\n                            </>\n                        ))\n                )}\n            </ul>\n            {/* <p>this is {JSON.stringify(bookData)} list component {hoge}</p> */}\n        </>\n    );\n};\n","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/components/Navigation.jsx",[],[],"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/pages/TodoIndex.jsx",["55","56"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Todo } from \"../components/Todo\";\nimport useSWR from \"swr\";\n\nexport const TodoIndex = () => {\n    // const dummyTodoList = [\n    //     {\n    //         id: 1,\n    //         todo: \"test1\",\n    //         deadline: \"2022-02-02\",\n    //         user_id: \"1\",\n    //         id_done: false,\n    //         created_at: JSON.stringify(new Date()),\n    //         updated_at: JSON.stringify(new Date()),\n    //     },\n    //     {\n    //         id: 2,\n    //         todo: \"test2\",\n    //         deadline: \"2022-02-22\",\n    //         user_id: \"2\",\n    //         id_done: false,\n    //         created_at: JSON.stringify(new Date()),\n    //         updated_at: JSON.stringify(new Date()),\n    //     },\n    //     {\n    //         id: 3,\n    //         todo: \"test3\",\n    //         deadline: \"2022-02-28\",\n    //         user_id: \"3\",\n    //         id_done: false,\n    //         created_at: JSON.stringify(new Date()),\n    //         updated_at: JSON.stringify(new Date()),\n    //     },\n    // ];\n\n    const [todoList, setTodoList] = useState(null);\n\n    const getAllTodo = async () => {\n        const result = await axios.get(\"http://localhost:3001/todo\");\n        setTodoList(result.data.result);\n        return result;\n    };\n\n    useEffect(() => {\n        getAllTodo();\n    }, []);\n\n    const fetcher = async (url) => (await axios.get(url)).data.result;\n    const options = {\n        // 初期データ\n        initialData: null,\n        // pollingの期間（ミリ秒）\n        refreshInterval: 3000,\n        // windowのフォーカス時にRevalidateする\n        revalidateOnFocus: true,\n    };\n\n    const { data, error } = useSWR(\"http://localhost:3001/todo\", fetcher, options);\n\n    return (\n        <ul>\n            {data?.map((x, i) => (\n                <Todo\n                    key={x.id}\n                    id={x.id}\n                    todo={x.todo}\n                    deadline={x.deadline}\n                    is_done={x.is_done}\n                    user_id={x.user_id}\n                    created_at={x.created_at}\n                    updated_at={x.updated_at}\n                    getData={getAllTodo}\n                />\n            ))}\n        </ul>\n    );\n};\n","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/pages/TodoPost.jsx",[],[],"/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/pages/TodoToday.jsx",["57","58"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Todo } from \"../components/Todo\";\nimport useSWR from \"swr\";\n\nexport const TodoToday = () => {\n    const [todoList, setTodoList] = useState(null);\n\n    const getTodayTodo = async () => {\n        const result = await axios.get(\"http://localhost:3001/todo/today\");\n        setTodoList(result.data.result);\n        return result;\n    };\n\n    useEffect(() => {\n        getTodayTodo();\n    }, []);\n\n    const fetcher = async (url) => (await axios.get(url)).data.result;\n    const options = {\n        // 初期データ\n        initialData: null,\n        // pollingの期間（ミリ秒）\n        refreshInterval: 3000,\n        // windowのフォーカス時にRevalidateする\n        revalidateOnFocus: true,\n    };\n    const { data, error } = useSWR(\"http://localhost:3001/todo/today\", fetcher,options);\n\n    return (\n        <ul>\n            {data?.map((x, i) => (\n                <Todo\n                    key={x.id}\n                    id={x.id}\n                    todo={x.todo}\n                    deadline={x.deadline}\n                    is_done={x.is_done}\n                    user_id={x.user_id}\n                    created_at={x.created_at}\n                    updated_at={x.updated_at}\n                    getData={getTodayTodo}\n                />\n            ))}\n        </ul>\n    );\n};\n","/Users/fujisakifumitaka/Desktop/gs_graduation/react-practice/react_app_class_220201/src/components/Todo.jsx",["59","60"],[],"import axios from \"axios\";\nexport const Todo = (\n    {\n        id,\n        todo,\n        deadline,\n        is_done,\n        user_id,\n        created_at,\n        updated_at,\n        getData,\n    }\n) => {\n    const updateTodoData = async (params) => {\n        const newData = { ...params, ...{ is_done: is_done ? false : true } };\n        const requestUrl = \"http://localhost:3001/todo\";\n        const updatedData = await axios.put(`${requestUrl}/${params.id}`, newData);\n        const result = await getData();\n        return updatedData;\n    };\n\n    const deleteTodoData = async (id) => {\n        const requestUrl = \"http://localhost:3001/todo\";\n        const removedData = await axios.delete(`${requestUrl}/${id}`);\n        const result = await getData();\n        return removedData;\n    };\n\n    return (\n        <li key={id} id={id}>\n            <input\n                type=\"checkbox\"\n                checked={is_done}\n                onChange={() =>\n                    updateTodoData({ id, todo, deadline, is_done, user_id })\n                }\n            />\n\n            <button type=\"button\" onClick={() => deleteTodoData(id)}>\n                delete\n            </button>\n            <p>\n                {deadline} {todo} by {user_id} at {created_at} and {updated_at}\n            </p>\n        </li>\n    );\n};\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":6,"column":15,"nodeType":"67","messageId":"68","endLine":6,"endColumn":21},{"ruleId":"65","severity":1,"message":"69","line":37,"column":12,"nodeType":"67","messageId":"68","endLine":37,"endColumn":20},{"ruleId":"65","severity":1,"message":"70","line":59,"column":19,"nodeType":"67","messageId":"68","endLine":59,"endColumn":24},{"ruleId":"65","severity":1,"message":"69","line":7,"column":12,"nodeType":"67","messageId":"68","endLine":7,"endColumn":20},{"ruleId":"65","severity":1,"message":"70","line":28,"column":19,"nodeType":"67","messageId":"68","endLine":28,"endColumn":24},{"ruleId":"65","severity":1,"message":"66","line":18,"column":15,"nodeType":"67","messageId":"68","endLine":18,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":25,"column":15,"nodeType":"67","messageId":"68","endLine":25,"endColumn":21},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","'todoList' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]